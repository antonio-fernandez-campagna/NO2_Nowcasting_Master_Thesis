"""
P√°gina de bienvenida para el Dashboard de An√°lisis de NO‚ÇÇ en Madrid.

Este m√≥dulo proporciona una introducci√≥n completa al proyecto, explicando
el contexto, los datos utilizados, la metodolog√≠a y las funcionalidades disponibles.
"""

import streamlit as st
import pandas as pd
import numpy as np
import plotly.graph_objects as go
import plotly.express as px
from typing import Dict, List
import datetime


# ==================== CONFIGURACI√ìN Y CONSTANTES ====================

PROJECT_INFO = {
    'title': 'Dashboard de An√°lisis de NO‚ÇÇ en Madrid',
    'subtitle': 'An√°lisis integrado de contaminaci√≥n atmosf√©rica, tr√°fico y meteorolog√≠a',
    'version': '2.0',
    'authors': ['Antonio Fern√°ndez'],
    'institution': 'Master Thesis - NO‚ÇÇ Prediction',
    'year': '2024'
}

DATA_SOURCES = {
    'Calidad del Aire': {
        'url': 'https://datos.madrid.es/portal/site/egob/menuitem.c05c1f754a33a9fbe4b2e4b284f1a5a0/',
        'granularity': 'Horaria',
        'description': 'Datos de concentraci√≥n de NO‚ÇÇ de las estaciones de medici√≥n de Madrid'
    },
    'Tr√°fico': {
        'url': 'https://datos.madrid.es/portal/site/egob/menuitem.c05c1f754a33a9fbe4b2e4b284f1a5a0/',
        'granularity': '15 minutos (agregado a horario)',
        'description': 'Intensidad, carga, ocupaci√≥n y velocidad del tr√°fico rodado'
    },
    'Meteorolog√≠a': {
        'url': 'https://cds.climate.copernicus.eu/datasets/reanalysis-era5-single-levels',
        'granularity': 'Horaria',
        'description': 'Variables meteorol√≥gicas de ERA5 (temperatura, viento, precipitaci√≥n, etc.)'
    }
}

HYPOTHESIS = [
    {
        'title': 'üåßÔ∏è La lluvia reduce los niveles de NO‚ÇÇ',
        'description': 'La precipitaci√≥n arrastra contaminantes atmosf√©ricos mediante deposici√≥n h√∫meda',
        'reference': 'Zhang et al. (2004) - Atmospheric Environment'
    },
    {
        'title': 'üå¨Ô∏è El viento dispersa el NO‚ÇÇ',
        'description': 'Mayor velocidad del viento aumenta la dispersi√≥n y reduce concentraciones',
        'reference': 'Kukkonen et al. (2003) - Atmospheric Environment'
    },
    {
        'title': 'üå°Ô∏è Temperaturas altas favorecen la fot√≥lisis',
        'description': 'El NO‚ÇÇ se descompone con luz solar y temperaturas elevadas',
        'reference': 'Finlayson-Pitts & Pitts (2000) - Chemistry of the atmosphere'
    },
    {
        'title': '‚òÄÔ∏è Radiaci√≥n solar reduce NO‚ÇÇ',
        'description': 'La radiaci√≥n solar descompone NO‚ÇÇ ‚Üí NO + O durante el d√≠a',
        'reference': 'Seinfeld & Pandis (2016) - Atmospheric Chemistry'
    },
    {
        'title': 'üöó Tr√°fico incrementa NO‚ÇÇ',
        'description': 'El tr√°fico rodado es la principal fuente de NO‚ÇÇ en entornos urbanos',
        'reference': 'Cyrys et al. (2003) - Science of the Total Environment'
    },
    {
        'title': 'üïí Patrones temporales c√≠clicos',
        'description': 'NO‚ÇÇ presenta ciclos diarios y semanales relacionados con actividad humana',
        'reference': 'Vardoulakis et al. (2003) - Atmospheric Environment'
    },
    {
        'title': 'üí® Presi√≥n atmosf√©rica y acumulaci√≥n',
        'description': 'Altas presiones producen estancamiento y acumulaci√≥n de contaminantes',
        'reference': 'Jacob & Winner (2009) - Atmospheric Environment'
    },
    {
        'title': 'üíß Humedad modula la qu√≠mica del NO‚ÇÇ',
        'description': 'La humedad influye en deposici√≥n h√∫meda y formaci√≥n de aerosoles',
        'reference': 'Beig et al. (2007) - Meteorology and air quality'
    }
]

VARIABLES_INFO = {
    'Tr√°fico': {
        'description': 'Variables del flujo vehicular que influyen directamente en las emisiones de NO‚ÇÇ',
        'variables': ['Intensidad (veh/h)', 'Carga vial (%)', 'Ocupaci√≥n (%)', 'Velocidad media (km/h)'],
        'rationale': 'El tr√°fico es la principal fuente antropog√©nica de NO‚ÇÇ en Madrid'
    },
    'Meteorol√≥gicas': {
        'description': 'Variables atmosf√©ricas que influyen en la dispersi√≥n y qu√≠mica del NO‚ÇÇ',
        'variables': ['Temperatura (¬∞C)', 'Punto de roc√≠o (¬∞C)', 'Velocidad del viento (km/h)', 
                     'Direcci√≥n del viento (¬∞)', 'Componentes c√≠clicas del viento',
                     'Presi√≥n (hPa)', 'Precipitaci√≥n (mm)', 'Radiaci√≥n solar (W/m¬≤)'],
        'rationale': 'Controlan la dispersi√≥n, transporte y transformaci√≥n qu√≠mica del NO‚ÇÇ'
    },
    'Temporales': {
        'description': 'Variables que capturan patrones temporales en las concentraciones de NO‚ÇÇ',
        'variables': ['Hora del d√≠a', 'D√≠a de la semana', 'Mes', 'Estaci√≥n', 'Fin de semana',
                     'Representaciones c√≠clicas (sin/cos)'],
        'rationale': 'Capturan ciclos diarios, semanales y estacionales del tr√°fico y meteorolog√≠a'
    }
}


# ==================== FUNCIONES DE VISUALIZACI√ìN ====================


def show_project_overview():
    """Muestra la visi√≥n general del proyecto."""
    st.header("Visi√≥n General del Proyecto")
    
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("""
        Este dashboard integra **datos de calidad del aire, tr√°fico y meteorolog√≠a** de Madrid 
        para comprender y predecir los niveles de **di√≥xido de nitr√≥geno (NO‚ÇÇ)**.
        
        **Objetivos principales:**
        -  **An√°lisis exploratorio** de patrones temporales y espaciales
        -  **Correlaciones** entre tr√°fico, meteorolog√≠a y contaminaci√≥n
        -  **Modelado predictivo** con GAM y XGBoost
        -  **Nowcasting** de NO‚ÇÇ para apoyo a la toma de decisiones
        
        **Per√≠odo de an√°lisis:** 2018-2024 (6 a√±os de datos)
        """)
    
    with col2:
        st.info("""
        **¬øPor qu√© NO‚ÇÇ?**
        
        - Principal contaminante del tr√°fico
        - Indicador de calidad del aire
        - Efectos en salud respiratoria
        - Regulado por normativa europea
        - L√≠mite OMS: 40 Œºg/m¬≥
        """)


def show_data_sources():
    """Muestra informaci√≥n sobre las fuentes de datos."""
    st.header("Fuentes de Datos")
    
    # Detalles de cada fuente
    for source, info in DATA_SOURCES.items():
        with st.expander(f"Detalles: {source}"):
            col1, col2 = st.columns([3, 1])
            
            with col1:
                st.markdown(f"""
                **Descripci√≥n:** {info['description']}
                
                **Granularidad:** {info['granularity']}
                
                **Fuente:** [Portal de Datos Abiertos]({info['url']})
                """)
            
            with col2:
                if source == 'Calidad del Aire':
                    st.metric("Estaciones NO‚ÇÇ", "24", help="Estaciones de medici√≥n activas")
                elif source == 'Tr√°fico':
                    st.metric("Sensores Tr√°fico", "4,000+", help="Sensores de intensidad distribuidos")
                else:
                    st.metric("Variables Meteo", "10", help="Variables meteorol√≥gicas principales")


def show_methodology():
    """Muestra la metodolog√≠a del proyecto."""
    st.header("üî¨ Metodolog√≠a")
    
    tab1, tab2, tab3, tab4 = st.tabs(["üìà Procesamiento", "üîó Mapeo", "üìä Variables", "ü§ñ Modelado"])
    
    with tab1:
        st.subheader("Procesamiento de Datos")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            **üö¶ Datos de Tr√°fico:**
            - Agregaci√≥n de 15 min ‚Üí 1 hora
            - **Intensidad:** Promedio aritm√©tico
            - **Carga:** Promedio ponderado por intensidad
            - **Ocupaci√≥n:** Promedio ponderado por intensidad
            - **Velocidad:** Promedio ponderado por intensidad
            """)
        
        with col2:
            st.markdown("""
            **üå¨Ô∏è Datos de Calidad del Aire:**
            - Filtrado de valores err√≥neos
            - Eliminaci√≥n de datos anteriores a 2018
            - Selecci√≥n de estaciones con sensores de tr√°fico cercanos
            
            **üå°Ô∏è Datos Meteorol√≥gicos:**
            - Descarga desde ERA5 (Copernicus)
            - Conversi√≥n de unidades (K‚Üí¬∞C, Pa‚ÜíhPa, etc.)
            """)
    
    with tab2:
        st.subheader("Mapeo Espacial de Sensores")
        
        st.markdown("""
        **Criterios de asignaci√≥n:**
        
        1. **Proximidad geogr√°fica:** Sensores de tr√°fico a < 200m de estaciones NO‚ÇÇ
        2. **Disponibilidad de datos:** Selecci√≥n del sensor con mayor cobertura temporal
        3. **Validaci√≥n temporal:** Verificaci√≥n de solapamiento en per√≠odos de medici√≥n
        
        **Resultado:** 24 estaciones NO‚ÇÇ con sensores de tr√°fico asignados
        """)
        
        st.info("üí° **Visualizaci√≥n disponible:** El m√≥dulo 'Mapeo Sensores' permite explorar estas asignaciones de forma interactiva.")
    
    with tab3:
        st.subheader("Variables del Modelo")
        
        for category, info in VARIABLES_INFO.items():
            st.markdown(f"**{category}:**")
            st.markdown(f"- *Descripci√≥n:* {info['description']}")
            st.markdown(f"- *Variables:* {', '.join(info['variables'])}")
            st.markdown(f"- *Justificaci√≥n:* {info['rationale']}")
            st.markdown("")
    
    with tab4:
        st.subheader("Estrategia de Modelado")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            **üéØ Modelos GAM (Generalized Additive Models)**
            
            - **Objetivo:** Comprensibilidad e interpretabilidad
            - **Fortalezas:** Visualizaci√≥n de relaciones no lineales
            - **Aplicaci√≥n:** An√°lisis exploratorio de efectos
            - **Salidas:** Curvas de respuesta por variable
            """)
        
        with col2:
            st.markdown("""
            **‚ö° Modelos XGBoost**
            
            - **Objetivo:** Precisi√≥n predictiva m√°xima
            - **Fortalezas:** Captura de interacciones complejas
            - **Aplicaci√≥n:** Nowcasting operacional
            - **Salidas:** Predicciones + importancia de variables
            """)


def show_scientific_hypothesis():
    """Muestra las hip√≥tesis cient√≠ficas del proyecto."""
    st.header("üî¨ Hip√≥tesis Cient√≠ficas")
    
    st.markdown("""
    El modelo se basa en **8 hip√≥tesis principales** respaldadas por literatura cient√≠fica:
    """)
    
    # Mostrar hip√≥tesis en formato de cards
    for i, hypothesis in enumerate(HYPOTHESIS):
        if i % 2 == 0:
            col1, col2 = st.columns(2)
        
        with col1 if i % 2 == 0 else col2:
            with st.container():
                st.markdown(f"""
                <div style="border: 2px solid #e1e1e1; border-radius: 10px; padding: 1rem; margin: 0.5rem 0; height: 200px;">
                    <h4 style="color: #1f77b4; margin-top: 0;">{hypothesis['title']}</h4>
                    <p style="font-size: 0.9rem; color: #666; margin: 0.5rem 0;">{hypothesis['description']}</p>
                    <p style="font-size: 0.8rem; color: #999; margin-top: auto;"><em>üìö {hypothesis['reference']}</em></p>
                </div>
                """, unsafe_allow_html=True)


def show_getting_started():
    """Muestra la gu√≠a de inicio r√°pido."""
    st.header("üöÄ Gu√≠a de Inicio R√°pido")
    
    st.markdown("""
    **Flujo de trabajo recomendado:**
    
    1. **üåç An√°lisis NO‚ÇÇ** ‚Üí Explorar patrones temporales y espaciales
    2. **üó∫Ô∏è Mapeo Sensores** ‚Üí Validar asignaciones geogr√°ficas
    3. **üìä Correlaciones** ‚Üí Identificar relaciones entre variables
    4. **ü§ñ Entrenamiento GAM** ‚Üí Comprender efectos individuales
    5. **‚ö° Entrenamiento XGBoost** ‚Üí Desarrollar modelos predictivos
    """)
 


def show_technical_specs():
    """Muestra especificaciones t√©cnicas."""
    st.header("‚öôÔ∏è Especificaciones T√©cnicas")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown("""
        **üìä Datos**
        - Per√≠odo: 2018-2024
        - Granularidad: Horaria
        - Registros: ~700K
        - Variables: 20+
        """)
    
    with col2:
        st.markdown("""
        **üîß Tecnolog√≠as**
        - Python 3.9+
        - Streamlit
        - Pandas, NumPy
        - Scikit-learn, XGBoost
        - Plotly, Matplotlib
        """)
    
    with col3:
        st.markdown("""
        **üìà Modelos**
        - GAM (pygam)
        - XGBoost
        - Validaci√≥n temporal
        - M√©tricas: RMSE, MAE, R¬≤
        """)


def show_project_footer():
    """Muestra el pie de p√°gina del proyecto."""
    st.markdown("---")
    
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        st.markdown(f"""
        <div style="text-align: center; color: #666; font-size: 0.9rem;">
            <p><strong>{PROJECT_INFO['title']}</strong></p>
            <p>{PROJECT_INFO['subtitle']}</p>
            <p>Versi√≥n {PROJECT_INFO['version']} | {PROJECT_INFO['year']}</p>
            <p>Desarrollado por: {', '.join(PROJECT_INFO['authors'])}</p>
            <p><em>{PROJECT_INFO['institution']}</em></p>
        </div>
        """, unsafe_allow_html=True)


# ==================== FUNCI√ìN PRINCIPAL ====================

def welcome_page():
    """Funci√≥n principal de la p√°gina de bienvenida."""
    
    # Navegaci√≥n por pesta√±as
    tab1, tab2, tab3, tab4 = st.tabs([
        "üéØ Objetivo", 
        "üìä Datos", 
        "üî¨ Metodolog√≠a", 
        "Especificaciones T√©cnicas"
    ])
    
    with tab1:
        show_project_overview()
        show_scientific_hypothesis()
    
    with tab2:
        show_data_sources()
    
    with tab3:
        show_methodology()
    
    with tab4:
        show_getting_started()
        show_technical_specs()
    
    # Pie de p√°gina
    show_project_footer()


if __name__ == "__main__":
    welcome_page() 